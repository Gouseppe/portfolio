---
import Layout from "../layouts/Layout.astro";
import meGreating from "../assets/me-waving.webp";
import Circle from "../components/Circle.astro";
import Button from "../components/Button.astro";
import CommingSoon from "../components/CommingSoon.astro";
//images
import presentationImage from "../assets/presentation-image.webp";
import mePlayingVideoGames from "../assets/me-playing.webp";
import meCoding from "../assets/me-coding.webp";
//lucide icons
import { Mail, Linkedin, Github, Download } from "@lucide/astro";
---

<Layout tittle="">
  <!-- SVG para el clip-path (invisible) -->

  <!-- <svg width="0" height="0" viewBox="0 0 100 100" class="hidden">
    <defs>
      <clipPath id="customShape" clipPathUnits="objectBoundingBox">
        <path
          d="M0.05,0.10 L 0.35,0.10 A0.05,0.05 0,0,0 0.40,0.05 L0.40,0.05 A0.05,0.05 0,0,1 0.45,0 L 0.94,0 A0.05,0.05 0,0,1 1,0.05 L 1,0.95 A0.05,0.05 0,0,1 0.94,1 L0.05,1 A0.05,0.05 0,0,1 0,0.95 L 0,0.15 A0.05,0.05 0,0,1 0.05,0.10 Z"
        ></path>
      </clipPath>
    </defs>
  </svg> -->

  <section class="section hero">
    <div class="purple-circle-container">
      <Circle color="#D9D9D952" />
    </div>
    <div class="hero__left-side">
      <div class="hero__greeting">
        <div>
          <p>Hola</p>
          <span class="emoji">üëã</span>
        </div>
        <p>Soy Gouseppe</p>
      </div>
      <div class="hero__phrase">
        <p>‚Äúsi puedes imaginarlo puedes programarlo‚Äù</p>
        <p>-Programacion ATS</p>
      </div>
      <div class="resume-container">
        <div class="download-icon">
          <a href={presentationImage.src} download="Fernando_Gouseppe_Resume">
            <Download />
          </a>
        </div>
        <a href={presentationImage.src} download="Fernando_Gouseppe_Resume">
          <img src={presentationImage.src} alt="" />
        </a>
      </div>
    </div>
    <div class="hero__right-side">
      <div class="me-images">
        <!-- las imagenes se agregan por CSS -->
      </div>
      <div class="right-side__buttons-container">
        <div class="right-side__button-container">
          <Button text="" iconPosition="right">
            <Linkedin width={"100%"} height={"100%"} />
          </Button>
        </div>
        <div class="right-side__button-container">
          <Button text="" iconPosition="right">
            <Github width={"100%"} height={"100%"} />
          </Button>
        </div>
        <div class="right-side__button-container">
          <Button text="" iconPosition="right">
            <Mail width={"100%"} height={"100%"} />
          </Button>
        </div>
      </div>
    </div>
  </section>
  <CommingSoon />
</Layout>
<script>
  import { gsap } from "gsap";
  gsap.fromTo(
    ".right-side__button-container",
    {
      y: 20,
      opacity: 0, // Animamos desde opacity: 0
    },
    {
      duration: 1,
      delay: 0.5,
      stagger: 0.15,
      y: 0,
      opacity: 1,
      ease: "sine.out",
    }
  );
  let isAnimating = false; // Variable para controlar el estado de la animaci√≥n
  const waveTimeline = gsap.timeline({
    onStart: () => {
      isAnimating = true; // Se activa cuando comienza la animaci√≥n
    },
    onComplete: () => {
      isAnimating = false; // Se desactiva cuando termina
    },
  });
  waveTimeline.to(".emoji", {
    rotation: 20,
    duration: 0.5,
    yoyo: true,
    repeat: 3,
    transformOrigin: "bottom right",
    ease: "power1.inOut",
  });

  const emojiElement = document?.querySelector(".emoji");
  if (emojiElement) {
    emojiElement.addEventListener("mouseenter", () => {
      !isAnimating && waveTimeline.restart();
    });
  }
</script>
<style>
  /* :root {
	--font-size-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
	--font-size-lg: clamp(1.2rem, 0.7vw + 1.2rem, 1.5rem);
	--font-size-xl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);
  } */
  * {
    color: white;
  }
  .purple-circle-container {
    position: absolute;
    top: -200px;
    left: -200px;
  }
  .hidden {
    position: absolute;
    width: 0;
    height: 0;
    overflow: hidden;
  }
  .circle {
    z-index: -1;
    position: absolute;

    width: 544px;
    height: 520px;
    flex-shrink: 0;
    border-radius: 544px;
    background: rgba(128, 0, 128, 0.27);
    filter: blur(150.25px);
    animation: pulse 3s infinite;
  }
  .section {
    margin: 0 auto;
    max-width: 1300px;
    position: relative;
    z-index: 1;
    display: flex;
    align-items: center;
    height: 100vh;
    font-family: system-ui, sans-serif;
    font-size: 1.5rem;
    text-align: center;

    box-sizing: border-box;
    background-color: #05010d;
    padding: 10px;
  }
  .hero {
    flex-direction: row;
  }
  .hero__left-side,
  .hero__right-side {
    display: flex;
    flex-direction: column;
    flex: 1;
    height: 100%;
  }
  .hero__left-side {
    align-items: center;
    justify-content: center;
    gap: 50px;
  }
  .hero__greeting {
    display: flex;
    width: 100%;
    font-size: var(--font-size-tittle);
    flex-direction: column;
    text-align: left;
    margin-left: 2rem;
  }
  .hero__greeting div {
    display: flex;
    align-items: center;
  }
  .hero__phrase {
    font-size: var(--font-size-sub-tittle);
    text-align: right;
  }

  .hero__right-side {
    align-items: center;
    justify-content: center;
  }
  .right-side__button-container {
    opacity: 0;
  }
  .hero .right-side__buttons-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 20px;
  }
  .me-images {
    max-width: 500px;
    width: 100%;
    aspect-ratio: 1/1;
    background: url("../assets/me-greeting.webp") no-repeat center;
    background-size: contain;
    animation: transition 6s steps(1, end) infinite;
  }
  .resume-container {
    position: relative;
  }
  .download-icon {
    position: absolute;
    right: 15px;
    top: 5px;
    transition: transform 0.3s ease-in-out;
    cursor: pointer;
  }
  .download-icon:hover {
    transform: scale(1.2);
  }
  img {
    width: 100%;
    height: auto;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.2);
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
  @keyframes transition {
    0% {
      background: url("../assets/me-waving.webp") no-repeat;
      background-size: contain;
    }
    33% {
      background: url("../assets/me-playing.webp") no-repeat;
      background-size: contain;
    }
    66% {
      background: url("../assets/me-coding.webp") no-repeat;
      background-size: contain;
    }
    100% {
      background: url("../assets/me-waving.webp") no-repeat;
      background-size: contain;
    }
  }
  .emoji {
    transform-origin: bottom center;
  }
</style>
