---
import Layout from "../layouts/Layout.astro";
import Circle from "../components/Circle.astro";
import Button from "../components/Button.astro";
import CommingSoon from "../components/CommingSoon.astro";
import { Image } from "astro:assets";
//images
import presentationImage from "../assets/presentation-image.webp";
import meWaving from "../assets/me-waving.webp";
import mePlaying from "../assets/me-playing.webp";
import meCoding from "../assets/me-coding.webp";
//lucide icons
import { Mail, Linkedin, Github, Download } from "@lucide/astro";
---

<Layout tittle="">
  <!-- SVG para el clip-path (invisible) -->

  <!-- <svg width="0" height="0" viewBox="0 0 100 100" class="hidden">
    <defs>
      <clipPath id="customShape" clipPathUnits="objectBoundingBox">
        <path
          d="M0.05,0.10 L 0.35,0.10 A0.05,0.05 0,0,0 0.40,0.05 L0.40,0.05 A0.05,0.05 0,0,1 0.45,0 L 0.94,0 A0.05,0.05 0,0,1 1,0.05 L 1,0.95 A0.05,0.05 0,0,1 0.94,1 L0.05,1 A0.05,0.05 0,0,1 0,0.95 L 0,0.15 A0.05,0.05 0,0,1 0.05,0.10 Z"
        ></path>
      </clipPath>
    </defs>
  </svg> -->

  <div class="black-screen"></div>
  <main>
    <section class="section hero">
      <div class="purple-circle-container">
        <Circle color="#D9D9D952" />
      </div>

      <div class="hero__left-side">
        <div class="hero__greeting">
          <div>
            <p>Hola</p>
            <span class="emoji">üëã</span>
          </div>
          <p>Soy Gouseppe</p>
        </div>
        <div class="hero__phrase">
          <p>‚Äúsi puedes imaginarlo puedes programarlo‚Äù</p>
          <p>-Programacion ATS</p>
        </div>
        <div class="right-side__buttons-container mobile">
          <div class="right-side__button-container">
            <Button
              text=""
              iconPosition="right"
              ariaLabel="Linkedin de fernando gouseppe tadeo guzman fiorillo"
              link="https://www.linkedin.com/in/fernando-guzm%C3%A1n-18177b313/"
            >
              <Linkedin width={"100%"} height={"100%"} />
            </Button>
          </div>
          <div class="right-side__button-container">
            <Button
              text=""
              iconPosition="right"
              ariaLabel="GitHub de Fernando Gouseppe"
              link="https://github.com/gouseppe"
            >
              <Github width={"100%"} height={"100%"} />
            </Button>
          </div>
          <div class="right-side__button-container">
            <Button
              text=""
              iconPosition="right"
              ariaLabel="Correo de Fernando Gouseppe"
              link="mailto:gouseppe.dev@gmail.com"
            >
              <Mail width={"100%"} height={"100%"} />
            </Button>
          </div>
        </div>
        <div class="resume-container">
          <div class="download-icon">
            <a
              href={presentationImage.src}
              download="Fernando_Gouseppe_Resume"
              aria-label="Descargar mi resume"
            >
              <Download />
            </a>
          </div>
          <a href={presentationImage.src} download="Fernando_Gouseppe_Resume">
            <img src={presentationImage.src} alt="imagen de mi resume" />
          </a>
        </div>
      </div>
      <div class="hero__right-side">
        <div class="me-images">
          <Image
            class="me-waving"
            src={meWaving}
            alt=""
            eagerly-loaded
            format={"webp"}
            loading="eager"
          />
          <Image class="me-playing" src={mePlaying} alt="" loading="eager" />
          <Image class="me-coding" src={meCoding} alt="" loading="eager" />
        </div>
        <div class="right-side__buttons-container">
          <div class="right-side__button-container">
            <Button
              text=""
              iconPosition="right"
              ariaLabel="Linkedin de fernando gouseppe tadeo guzman fiorillo"
              link="https://www.linkedin.com/in/fernando-guzm%C3%A1n-18177b313/"
            >
              <Linkedin width={"100%"} height={"100%"} />
            </Button>
          </div>
          <div class="right-side__button-container">
            <Button
              text=""
              iconPosition="right"
              ariaLabel="GitHub de Fernando Gouseppe"
              link="https://github.com/gouseppe"
            >
              <Github width={"100%"} height={"100%"} />
            </Button>
          </div>
          <div class="right-side__button-container">
            <Button
              text=""
              iconPosition="right"
              ariaLabel="Correo de Fernando Gouseppe"
              link="mailto:gouseppe.dev@gmail.com"
            >
              <Mail width={"100%"} height={"100%"} />
            </Button>
          </div>
        </div>
      </div>
      <div class="hero__greeting mobile">
        <p>Bienvenido!</p>
        <span class="emoji mobile">üëã</span>
      </div>
    </section>
    <CommingSoon />
  </main>
</Layout>
<script>
  import { gsap } from "gsap";

  let isAnimating = false; // Variable para controlar el estado de la animaci√≥n
  let mm = gsap.matchMedia();
  mm.add(
    {
      isMobile: "(max-width: 767px)",
      isDesktop: "(min-width: 768px)",
    },
    (context: any) => {
      let { isMobile, isDesktop } = context.conditions;
      const emoji = isMobile
        ? (document.querySelector(".emoji.mobile") as HTMLElement)
        : (document.querySelector(".emoji") as HTMLElement);

      const initialAnimation = gsap.timeline({
        defaults: { ease: "power1.inOut" },
        onComplete: () => {
          // Aqu√≠ agregas el listener solo cuando termina toda la animaci√≥n inicial

          emoji.addEventListener("mouseenter", () => {
            if (!isAnimating) {
              gsap.to(".emoji", {
                rotation: 20,
                duration: 0.5,
                yoyo: true,
                repeat: 3,
                transformOrigin: "bottom right",
                ease: "power1.inOut",
                onStart: () => {
                  isAnimating = true;
                },
                onComplete: () => {
                  isAnimating = false;
                },
              });
            }
          });
        },
      });
      initialAnimation
        .set(emoji, {
          top: "50%",
          left: "50%",
          position: "absolute",
          transformOrigin: "bottom right",
        })
        .to(emoji, {
          opacity: 1,
          duration: 0.9,
        })
        .to(emoji, {
          rotation: 20,
          yoyo: true,
          repeat: 3,
          duration: 0.5,
        })
        .to(emoji, {
          top: "auto",
          left: "auto",
          scale: 1,
          duration: 0.5,
          delay: 0.5,
          x: isMobile ? 98.295 : 98.5,
        })
        .to(".black-screen", {
          zIndex: -1,
          autoAlpha: 0,
          duration: 0.5,
        })
        .fromTo(
          ".right-side__button-container",
          {
            y: 20,
            opacity: 0, // Animamos desde opacity: 0
          },
          {
            duration: 1,
            stagger: 0.15,
            y: 0,
            opacity: 1,
            ease: "sine.out",
          }
        );
    }
  );

  const meImagesTimeline = gsap.timeline({ repeat: -1, delay: 3 });

  meImagesTimeline
    .set(".me-waving", { autoAlpha: 1, rotation: 0, x: 0 }, 0)
    .set(".me-playing, .me-coding", { autoAlpha: 0 }, 0)
    // Animaci√≥n de balanceo
    .to(
      ".me-waving",
      { rotation: 5, x: 10, duration: 0.3, ease: "power1.inOut" },
      0.1
    )
    .to(
      ".me-waving",
      { rotation: -5, x: -10, duration: 0.3, ease: "power1.inOut" },
      0.4
    )
    .to(
      ".me-waving",
      { rotation: 0, x: 0, duration: 0.2, ease: "power1.inOut" },
      0.7
    )

    // Segunda imagen: .me-playing
    .set(".me-playing", { autoAlpha: 1, y: 0 }, 2)
    .set(".me-waving, .me-coding", { autoAlpha: 0 }, 2)
    // Animaci√≥n de salto
    .to(".me-playing", { y: -20, duration: 0.3, ease: "power1.out" }, 2.1)
    .to(".me-playing", { y: 0, duration: 0.4, ease: "bounce.out" }, 2.4)

    // Tercera imagen: .me-coding
    .set(".me-coding", { autoAlpha: 1, scale: 1 }, 4)
    .set(".me-waving, .me-playing", { autoAlpha: 0 }, 4)
    // Animaci√≥n de zoom
    .to(".me-coding", { scale: 1.05, duration: 0.2, ease: "power1.inOut" }, 4.1)
    .to(".me-coding", { scale: 1, duration: 0.3, ease: "power1.inOut" }, 4.3)
    // Pausa para la √∫ltima imagen
    .to({}, { duration: 2 }, 5);
</script>
<style>
  /* :root {
	--font-size-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
	--font-size-lg: clamp(1.2rem, 0.7vw + 1.2rem, 1.5rem);
	--font-size-xl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);
  } */

  * {
    color: white;
  }
  body {
    overflow-x: hidden;
  }
  .me-images {
    overflow: hidden;
  }
  .me-images img {
    position: absolute;
    opacity: 0;
  }
  .purple-circle-container {
    position: absolute;
    top: -200px;
    left: -200px;
    z-index: 0;
  }
  .circle {
    z-index: -1;
    position: absolute;

    width: 544px;
    height: 520px;
    flex-shrink: 0;
    border-radius: 544px;
    background: rgba(128, 0, 128, 0.27);
    filter: blur(150.25px);
    animation: pulse 3s infinite;
  }
  .section {
    margin: 0 auto;
    max-width: 1300px;
    /* position: relative;
    z-index: 1; */
    display: flex;
    align-items: center;
    height: 100vh;
    font-family: system-ui, sans-serif;
    font-size: 1.5rem;
    text-align: center;
    box-sizing: border-box;
    padding: 10px;
  }
  /* .auxiliar-container {
    position: absolute;
    max-width: 1300px;
    margin: 0 auto;
    height: 100vh;

    width: 100%;
    left: 50%;
    transform: translateX(-50%);
  } */
  .hero {
    flex-direction: row;
  }
  .hero__left-side,
  .hero__right-side {
    display: flex;
    flex-direction: column;
    flex: 1;
    height: 100%;
  }
  .hero__left-side {
    align-items: center;
    justify-content: center;
    gap: 50px;
  }
  .hero__greeting {
    display: flex;
    width: 100%;
    font-size: var(--font-size-tittle);
    flex-direction: column;
    text-align: left;
    margin-left: 2rem;
  }
  .hero__greeting div {
    display: flex;
    align-items: center;
  }

  .hero__phrase {
    font-size: var(--font-size-sub-tittle);
    text-align: right;
  }

  .hero__right-side {
    align-items: center;
    justify-content: center;
  }
  .right-side__button-container {
    opacity: 0;
  }
  .right-side__buttons-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 20px;
  }
  .me-images {
    position: relative;
    max-width: 500px;
    width: 100%;
    aspect-ratio: 1/1;
    text-align: left;
  }
  .resume-container {
    position: relative;
  }
  .download-icon {
    position: absolute;
    right: 15px;
    top: 5px;
    transition: transform 0.3s ease-in-out;
    cursor: pointer;
  }
  .download-icon:hover {
    transform: scale(1.2);
  }
  img {
    width: 100%;
    height: auto;
  }
  .black-screen {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 15;
    height: 100vh;
    width: 100%;
    background-color: #05010d;
  }

  .emoji {
    transform-origin: bottom center;
    z-index: 40;
    position: absolute;
    top: 50%;
    left: 50%;
    y: -10;
    scale: 4;
    opacity: 0;
  }
  @media (min-width: 768px) {
    .mobile {
      display: none;
    }
  }
  @media (max-width: 767px) {
    .hero {
      flex-direction: column-reverse;
      overflow: hidden;
      width: 100%;
      gap: 0px;
      justify-content: center;
    }
    .hero__greeting:not(.mobile) {
      display: none;
    }
    .hero__greeting.mobile {
      display: flex;
      font-size: var(--font-size-tittle);
      align-items: center;
      margin: 0px;
      gap: 0px;
    }
    .hero__greeting.mobile p {
      transform: translateX(-26.095px);
    }
    .hero__right-side {
      width: 60%;
      flex: 0;
    }
    .right-side__buttons-container {
      display: flex;
    }
    .right-side__buttons-container:not(.mobile) {
      display: none !important;
    }
    .hero__phrase {
      text-align: center;
    }
    .hero__left-side {
      flex: 0;
      gap: 15px;
    }
  }
</style>
